from collections import defaultdict
from collections import deque
def dfs(dq,scnt,wcnt):
    global answer
    wtmp_list = list()
    answer = max(scnt,answer)
    for i in range(len(dq)):
        p = dq.popleft()
        if infos[p] == 1:
            if scnt>wcnt+1:
                for j in D[p]:
                    dq.append(j)
                dfs(dq,scnt,wcnt+1)
                for j in D[p]:
                    dq.pop()
        else:
            for j in D[p]:
                dq.append(j)
            dfs(dq,scnt+1,wcnt)
            for j in D[p]:
                dq.pop()
        dq.append(p)
    
def solution(info, edges):
    global answer,infos,D
    infos = info # 양, 늑대 여부
    answer = 0
    D = defaultdict(list) # 그래프
    dq = deque()
    for i in edges:
        D[i[0]].append(i[1])
    dq.append(0)
    dfs(dq,0,0)
    return answer
